services:
  mongo1:
    image: mongo:5
    hostname: mongo1
    restart: always
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27017" ]
    ports:
      - "27017:27017"
    networks:
      - local-network
    volumes:
      - mongo-data-1:/data/db
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:37017\"},{_id:2,host:\"mongo3:47017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s
  #---------------------------------------------------------------------------------------------------------------------
  mongo2:
    image: mongo:5
    hostname: mongo2
    restart: always
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "37017" ]
    ports:
      - "37017:37017"
    networks:
      - local-network
    volumes:
      - mongo-data-2:/data/db
  #---------------------------------------------------------------------------------------------------------------------
  mongo3:
    image: mongo:5
    hostname: mongo3
    restart: always
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "47017" ]
    ports:
      - "47017:47017"
    networks:
      - local-network
    volumes:
      - mongo-data-3:/data/db
#---------------------------------------------------------------------------------------------------------------------
networks:
  local-network:
    name: sample-network.local
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 171.28.0.0/16
#---------------------------------------------------------------------------------------------------------------------
volumes:
  mongo-data-1:
  mongo-data-2:
  mongo-data-3:
